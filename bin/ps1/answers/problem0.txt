
a.
subtraction
r = p - q;
	set r = p by performing a copy of all terms of p to r
		foreach term t_q of q
			if t_q is of the same degree of a term t_r of r 
				then term t_r = t_r - t_q
				else add -(t_q) as a term of r
	return r

b.
multiplication
r = p * q;
	foreach term t_p of p
		if there exists a term t_q of q of the same degree as a term t_p
			then add to r a term t_r = t_q * t_p
	return r

c.
division
q = u / v;
	set r = u by making a term-by-term copy of u
	set hd_v = the highest degree of v
	set q = 0
	while the highest degree of r is greater than or equal to hd_v
		set coe = coefficient of the highest degree term of r / coefficient of the highest degree term of v
		set diff = highest degree of r - hd_v
		modify q by adding a term with coefficient coe and of degree diff 
		modify r by subtracting (v multiplied by coe and with each term's degree increased by diff)
	return q

d.
u = x^3-2*x+3
v = 3*x^2
r = copy of u = x^3-2*x+3
hd_v = highest degree v = 2
q = 0
[while highest degree r >= hd_v] hd_r = 3, which > hd_v = 2:  TRUE
Iteration 1: q = 0, r = x^3-2*x+3, hd_v = 3, v = 3*x^2, u = x^3-2*x+3
	[set coe = coefficient of the highest degree term of r / coefficient of the highest degree term of v]
	coe = 1 / 3 = 1/3
	[set diff = highest degree of r - hd_v]
	diff = 3 - 2 = 1
	[modify q by adding a term with coefficient coe and of degree diff]
	q = (1/3)*x
	[modify r by subtracting (v multiplied by coe and with each term's degree increased by diff)]
	r = x^3-2*x+3 - x^2*x = -2*x+3
[while highest degree r >= hd_v] hd_r = 1, which > hd_v = 2:  FALSE
return q = (1/3)*x


u = x^3+x-1
v = x+1
r = copy of u = x^3+x-1
hd_v = highest degree v = 1
q = 0
[while highest degree r >= hd_v] hd_r = 3, which > hd_v = 1:  TRUE
Iteration 1: q = 0, r = x^3+x-1, hd_v = 3, v = x+1, u = x^3+x-1
	[set coe = coefficient of the highest degree term of r / coefficient of the highest degree term of v]
	coe = 1 / 1 = 1
	[set diff = highest degree of r - hd_v]
	diff = 3 - 1 = 2
	[modify q by adding a term with coefficient coe and of degree diff]
	q = 1*x^2 = x^2
	[modify r by subtracting (v multiplied by coe and with each term's degree increased by diff)]
	r = x^3+x-1 - (x+1)*1*x^2 = -x^2+x-1
[while highest degree r >= hd_v] hd_r = 2, which > hd_v = 1:  TRUE
Iteration 2: q = x^2, r = -x^2+x-1, hd_v = 3, v = x+1, u = x^3+x-1
	[set coe = coefficient of the highest degree term of r / coefficient of the highest degree term of v]
	coe = -1 / 1 = -1
	[set diff = highest degree of r - hd_v]
	diff = 2 - 1 = 1
	[modify q by adding a term with coefficient coe and of degree diff]
	q = x^2 + -1*x = x^2-x
	[modify r by subtracting (v multiplied by coe and with each term's degree increased by diff)]
	r = -x^2+x-1 - (x+1)*-1*x = 2*x-1
[while highest degree r >= hd_v] hd_r = 1, which > hd_v = 1:  TRUE
Iteration 3: q = x^2-x, r = 2*x-1, hd_v = 3, v = x+1, u = x^3+x-1
	[set coe = coefficient of the highest degree term of r / coefficient of the highest degree term of v]
	coe = 2 / 1 = 2
	[set diff = highest degree of r - hd_v]
	diff = 1 - 1 = 0
	[modify q by adding a term with coefficient coe and of degree diff]
	q = x^2-x + 2 = x^2-x+2
	[modify r by subtracting (v multiplied by coe and with each term's degree increased by diff)]
	r = 2*x-1 - (x+1)*2 = -3
[while highest degree r >= hd_v] hd_r = 0, which > hd_v = 1:  FALSE
return q = x^2-x+2
